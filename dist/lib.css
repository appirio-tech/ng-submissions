avatar {
  display: block;
  width: 35px;
  height: 35px;
  border-radius: 50%;
  background-color: #eee;
  overflow: hidden; }
  avatar img {
    width: 100%;
    height: 100%; }


/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInN0eWxlcy9hdmF0YXIuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFFQTtFQUNFLEFBQWtCO0VBSEYsQUFJaEI7RUFKZ0IsQUFLaEI7RUFDQSxBQUFrQjtFQUNsQixBQUFrQjtFQUNsQixBQUFrQjtFQUVwQixBQUFPO0lBQ0gsQUFBUTtJQUNSLEFBQVEiLCJmaWxlIjoic3R5bGVzL2F2YXRhci5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIkYXZhdGFyLWRpYW1ldGVyOiAzNXB4O1xuXG5hdmF0YXIge1xuICBkaXNwbGF5ICAgICAgICAgOiBibG9jaztcbiAgd2lkdGggICAgICAgICAgIDogJGF2YXRhci1kaWFtZXRlcjtcbiAgaGVpZ2h0ICAgICAgICAgIDogJGF2YXRhci1kaWFtZXRlcjtcbiAgYm9yZGVyLXJhZGl1cyAgIDogNTAlO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZWVlO1xuICBvdmVyZmxvdyAgICAgICAgOiBoaWRkZW47XG5cbiAgaW1nIHtcbiAgICB3aWR0aCA6IDEwMCU7XG4gICAgaGVpZ2h0OiAxMDAlO1xuICB9XG59XG4iXSwic291cmNlUm9vdCI6Ii9zb3VyY2UvIn0= */
loader {
  position: absolute;
  display: flex;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  justify-content: center;
  align-items: center; }
  loader .container {
    padding: 24px;
    opacity: .98;
    border-radius: 10px; }
  loader .loader {
    width: 50px;
    height: 50px;
    border-top: 10px solid #A7A9AB;
    border-right: 10px solid #A7A9AB;
    border-bottom: 10px solid #A7A9AB;
    border-left: 10px solid #e6e6e6;
    -webkit-transform: translateZ(0);
    -ms-transform: translateZ(0);
    transform: translateZ(0);
    -webkit-animation: load8 .8s infinite linear;
    animation: load8 .8s infinite linear; }
  loader .loader, loader .loader:after {
    border-radius: 50%; }

@-webkit-keyframes load8 {
  0% {
    -webkit-transform: rotate(0deg);
    transform: rotate(0deg); }

  100% {
    -webkit-transform: rotate(360deg);
    transform: rotate(360deg); } }

@keyframes load8 {
  0% {
    -webkit-transform: rotate(0deg);
    transform: rotate(0deg); }

  100% {
    -webkit-transform: rotate(360deg);
    transform: rotate(360deg); } }


/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInN0eWxlcy9sb2FkZXIuc2NzcyIsIi4uL25vZGVfbW9kdWxlcy9hcHBpcmlvLXdvcmstc3R5bGVzL3N0eWxlcy9fdmFyaWFibGVzLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBRUE7RUFDRSxBQUFpQjtFQUNqQixBQUFpQjtFQUNqQixBQUFpQjtFQUNqQixBQUFpQjtFQUNqQixBQUFpQjtFQUNqQixBQUFpQjtFQUNqQixBQUFpQjtFQUNqQixBQUFpQjtFQUVuQixBQUFPO0lDY1ksQURiZjtJQUVBLEFBQWtCO0lDOEJHLEFEN0JyQjtFQUdKLEFBQU87SUFDSCxBQUFPO0lBQ1AsQUFBUTtJQUNSLEFBQW1CO0lBQ25CLEFBQW1CO0lBQ25CLEFBQW1CO0lBQ25CLEFBQW1CO0lBQ25CLEFBQW1CO0lBQ25CLEFBQW1CO0lBQ25CLEFBQW1CO0lBQ25CLEFBQW1CO0lBQ25CLEFBQW1CO0VBRXZCLEFBQU8sQUFBUyxBQUFPLEFBQU87SUFFMUIsQUFBZTs7bUJBTUE7RUFDbkI7SUFDSSxBQUFtQjtJQUNuQixBQUFXOztFQUVmO0lBQ0ksQUFBbUI7SUFDbkIsQUFBVzs7V0FJSjtFQUNYO0lBQ0ksQUFBbUI7SUFDbkIsQUFBVzs7RUFFZjtJQUNJLEFBQW1CO0lBQ25CLEFBQVciLCJmaWxlIjoic3R5bGVzL2xvYWRlci5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJAaW1wb3J0IFwid29yay1pbmNsdWRlc1wiO1xuXG5sb2FkZXIge1xuICBwb3NpdGlvbiAgICAgICA6IGFic29sdXRlO1xuICBkaXNwbGF5ICAgICAgICA6IGZsZXg7XG4gIHRvcCAgICAgICAgICAgIDogMDtcbiAgbGVmdCAgICAgICAgICAgOiAwO1xuICB3aWR0aCAgICAgICAgICA6IDEwMCU7XG4gIGhlaWdodCAgICAgICAgIDogMTAwJTtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIGFsaWduLWl0ZW1zICAgIDogY2VudGVyO1xuXG4gIC5jb250YWluZXIge1xuICAgIHBhZGRpbmcgICAgICAgICA6ICRzcGFjaW5nLWJpZ2dlc3Q7XG4gICAgLy8gYmFja2dyb3VuZC1jb2xvcjogJHByaW1hcnktY29sb3I7XG4gICAgb3BhY2l0eSAgICAgICAgIDogLjk4O1xuICAgIGJvcmRlci1yYWRpdXMgICA6ICRib3JkZXItcmFkaXVzLWJpZ2dlc3Q7XG4gIH1cblxuICAubG9hZGVyIHtcbiAgICB3aWR0aDogNTBweDtcbiAgICBoZWlnaHQ6IDUwcHg7XG4gICAgYm9yZGVyLXRvcCAgICAgICA6IDEwcHggc29saWQgJHByaW1hcnktY29sb3ItbGlnaHQ7XG4gICAgYm9yZGVyLXJpZ2h0ICAgICA6IDEwcHggc29saWQgJHByaW1hcnktY29sb3ItbGlnaHQ7XG4gICAgYm9yZGVyLWJvdHRvbSAgICA6IDEwcHggc29saWQgJHByaW1hcnktY29sb3ItbGlnaHQ7XG4gICAgYm9yZGVyLWxlZnQgICAgICA6IDEwcHggc29saWQgJHByaW1hcnktY29sb3ItbGlnaHRlc3QgO1xuICAgIC13ZWJraXQtdHJhbnNmb3JtOiB0cmFuc2xhdGVaKDApO1xuICAgIC1tcy10cmFuc2Zvcm0gICAgOiB0cmFuc2xhdGVaKDApO1xuICAgIHRyYW5zZm9ybSAgICAgICAgOiB0cmFuc2xhdGVaKDApO1xuICAgIC13ZWJraXQtYW5pbWF0aW9uOiBsb2FkOCAuOHMgaW5maW5pdGUgbGluZWFyO1xuICAgIGFuaW1hdGlvbiAgICAgICAgOiBsb2FkOCAuOHMgaW5maW5pdGUgbGluZWFyO1xuICB9XG4gIC5sb2FkZXIsXG4gIC5sb2FkZXI6YWZ0ZXIge1xuICAgIGJvcmRlci1yYWRpdXM6IDUwJTtcbiAgfVxuXG5cbn1cblxuQC13ZWJraXQta2V5ZnJhbWVzIGxvYWQ4IHtcbiAgMCUge1xuICAgIC13ZWJraXQtdHJhbnNmb3JtOiByb3RhdGUoMGRlZyk7XG4gICAgdHJhbnNmb3JtOiByb3RhdGUoMGRlZyk7XG4gIH1cbiAgMTAwJSB7XG4gICAgLXdlYmtpdC10cmFuc2Zvcm06IHJvdGF0ZSgzNjBkZWcpO1xuICAgIHRyYW5zZm9ybTogcm90YXRlKDM2MGRlZyk7XG4gIH1cbn1cblxuQGtleWZyYW1lcyBsb2FkOCB7XG4gIDAlIHtcbiAgICAtd2Via2l0LXRyYW5zZm9ybTogcm90YXRlKDBkZWcpO1xuICAgIHRyYW5zZm9ybTogcm90YXRlKDBkZWcpO1xuICB9XG4gIDEwMCUge1xuICAgIC13ZWJraXQtdHJhbnNmb3JtOiByb3RhdGUoMzYwZGVnKTtcbiAgICB0cmFuc2Zvcm06IHJvdGF0ZSgzNjBkZWcpO1xuICB9XG59IiwiXG4vLyBkaXNhYmxlIGJvcmRlci1ib3gtc2l6aW5nIGluIGJvdXJib24tbmVhdFxuJGJvcmRlci1ib3gtc2l6aW5nOiBmYWxzZTtcblxuLy8gQ29sb3JzXG4vLyBHcmV5c1xuJG1lcmN1cnkgICAgIDogI2U2ZTZlNjtcbiRtaW5lLXNoYWZ0ICA6ICMyRDJEMkQ7XG4kZ3JheS1jaGF0ZWF1OiAjQTdBOUFCO1xuXG4vLyBQcmltYXJ5IGNvbG9yc1xuJHByaW1hcnktY29sb3IgICAgICAgICA6ICM2NjY7XG4kcHJpbWFyeS1jb2xvci1saWdodCAgIDogJGdyYXktY2hhdGVhdTtcbiRwcmltYXJ5LWNvbG9yLWxpZ2h0ZXN0OiAkbWVyY3VyeTtcbiRwcmltYXJ5LWNvbG9yLWRhcmsgICAgOiAjNDQ0O1xuJHByaW1hcnktY29sb3ItZGFya2VzdCA6ICRtaW5lLXNoYWZ0O1xuXG4vLyBjb21wbGVtZW50YXJ5IGNvbG9yc1xuJGNvbG9yLXN1Y2Nlc3M6ICM0Njk0MDg7XG4kY29sb3Itd2FybmluZzogI0RBRDcxNDtcbiRjb2xvci1kYW5nZXIgOiAjRDk0MDFGO1xuJGNvbG9yLWluZm8gICA6ICMwMjlBQ0Y7XG5cbiRiYXNlICAgICAgICAgICAgOiAxcHg7XG4kc3BhY2luZyAgICAgICAgIDogMTRweDtcbiRzcGFjaW5nLWJpZyAgICAgOiAxOHB4O1xuJHNwYWNpbmctYmlnZ2VzdCA6IDI0cHg7XG4kc3BhY2luZy1zbWFsbCAgIDogMTBweDtcbiRzcGFjaW5nLXNtYWxsZXN0OiA2cHg7XG5cbiRmb250LXNpemUgICAgICAgICA6IDE0cHg7XG4kZm9udC1zaXplLWJpZyAgICAgOiAxOHB4O1xuJGZvbnQtc2l6ZS1iaWdnZXN0IDogMjRweDtcbiRmb250LXNpemUtc21hbGwgICA6IDEwcHg7XG4kZm9udC1zaXplLXNtYWxsZXN0OiA4cHg7XG5cbiRsaW5lLWhlaWdodCAgICAgICAgIDogMTZweDtcbiRsaW5lLWhlaWdodC1iaWcgICAgIDogMjBweDtcbiRsaW5lLWhlaWdodC1iaWdnZXN0IDogMjZweDtcbiRsaW5lLWhlaWdodC1zbWFsbCAgIDogMTJweDtcbiRsaW5lLWhlaWdodC1zbWFsbGVzdDogMTBweDtcblxuXG4kYm9yZGVyLXJhZGl1cyAgICAgICAgIDogNnB4O1xuJGJvcmRlci1yYWRpdXMtYmlnICAgICA6IDhweDtcbiRib3JkZXItcmFkaXVzLWJpZ2dlc3QgOiAxMHB4O1xuJGJvcmRlci1yYWRpdXMtc21hbGwgICA6IDRweDtcbiRib3JkZXItcmFkaXVzLXNtYWxsZXN0OiAycHg7XG4iXSwic291cmNlUm9vdCI6Ii9zb3VyY2UvIn0= */
#modal-overlay {
  display: none;
  position: fixed;
  top: 0;
  left: 0;
  height: 100%;
  width: 100%;
  z-index: 10;
  background-color: rgba(0, 0, 0, 0.6); }

modal {
  -webkit-box-align: center;
  -moz-box-align: center;
  box-align: center;
  -webkit-align-items: center;
  -moz-align-items: center;
  -ms-align-items: center;
  -o-align-items: center;
  align-items: center;
  -ms-flex-align: center;
  display: none;
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: 11; }
  modal.show {
    display: -webkit-box;
    display: -moz-box;
    display: box;
    display: -webkit-flex;
    display: -moz-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-pack: center;
    -moz-box-pack: center;
    box-pack: center;
    -webkit-justify-content: center;
    -moz-justify-content: center;
    -ms-justify-content: center;
    -o-justify-content: center;
    justify-content: center;
    -ms-flex-pack: center;
    -webkit-box-align: center;
    -moz-box-align: center;
    box-align: center;
    -webkit-align-items: center;
    -moz-align-items: center;
    -ms-align-items: center;
    -o-align-items: center;
    align-items: center;
    -ms-flex-align: center;
    -webkit-box-lines: multiple;
    -moz-box-lines: multiple;
    box-lines: multiple;
    -webkit-flex-wrap: wrap;
    -moz-flex-wrap: wrap;
    -ms-flex-wrap: wrap;
    flex-wrap: wrap; }
  modal .close {
    position: absolute;
    right: 14px;
    top: 14px;
    padding: 10px;
    background-color: white; }


/*# sourceMappingURL=data:application/json;base64, */
messaging.widget .messages {
  max-height: 120px; }
messaging.widget form {
  margin-top: 10px; }
  messaging.widget form textarea {
    height: 30px;
    background-color: #E6E1E1; }
  messaging.widget form button.attach {
    display: none; }
  messaging.widget form button.enter {
    float: left;
    width: 100px;
    background-color: blue;
    color: white;
    margin-top: 10px; }

messaging {
  display: block; }
  messaging::after {
    clear: both;
    content: "";
    display: table; }
  messaging .messages {
    max-height: 500px;
    overflow: scroll; }
    messaging .messages > li {
      display: -webkit-box;
      display: -moz-box;
      display: box;
      display: -webkit-flex;
      display: -moz-flex;
      display: -ms-flexbox;
      display: flex;
      -webkit-box-pack: start;
      -moz-box-pack: start;
      box-pack: start;
      -webkit-justify-content: flex-start;
      -moz-justify-content: flex-start;
      -ms-justify-content: flex-start;
      -o-justify-content: flex-start;
      justify-content: flex-start;
      -ms-flex-pack: start;
      -webkit-box-align: center;
      -moz-box-align: center;
      box-align: center;
      -webkit-align-items: center;
      -moz-align-items: center;
      -ms-align-items: center;
      -o-align-items: center;
      align-items: center;
      -ms-flex-align: center;
      -webkit-box-lines: multiple;
      -moz-box-lines: multiple;
      box-lines: multiple;
      -webkit-flex-wrap: wrap;
      -moz-flex-wrap: wrap;
      -ms-flex-wrap: wrap;
      flex-wrap: wrap;
      -webkit-box-lines: single;
      -moz-box-lines: single;
      box-lines: single;
      -webkit-flex-wrap: nowrap;
      -moz-flex-wrap: nowrap;
      -ms-flex-wrap: nowrap;
      flex-wrap: nowrap;
      position: relative;
      padding: 10px 0;
      border-top: 1px solid #ccc; }
      messaging .messages > li avatar {
        min-width: 35px; }
      messaging .messages > li:first-child {
        border-top: 0; }
      messaging .messages > li .message {
        margin-left: 10px; }
        messaging .messages > li .message .attachments li {
          width: 50px;
          height: 40px;
          background-color: purple;
          display: inline-block;
          margin: 5px; }
          messaging .messages > li .message .attachments li:first-child {
            margin-left: 0; }
  messaging form {
    margin-top: 20px; }
    messaging form textarea {
      width: 100%;
      padding: 5px;
      height: 75px;
      border: 0; }
    messaging form .enter, messaging form .attach {
      margin-top: 20px; }
    messaging form button.enter {
      float: left;
      width: 200px;
      background-color: grey;
      color: white; }
    messaging form button.attach {
      float: right;
      background-color: initial; }


/*# sourceMappingURL=data:application/json;base64, */
threads {
  display: block;
  background-color: white; }
  threads ul li {
    border-top: 1px solid #ccc; }
    threads ul li > a {
      display: block;
      padding: 10px 6px; }
      threads ul li > a:hover {
        background-color: #eee; }
    threads ul li::after {
      clear: both;
      content: "";
      display: table; }
    threads ul li:first-child {
      border-top: none; }
    threads ul li header * {
      display: inline-block;
      vertical-align: middle; }
    threads ul li header h4 {
      display: inline-block;
      max-width: 70%;
      overflow: hidden;
      text-overflow: ellipsis;
      white-space: nowrap;
      word-wrap: normal; }
    threads ul li header time {
      display: inline-block;
      max-width: 30%;
      overflow: hidden;
      text-overflow: ellipsis;
      white-space: nowrap;
      word-wrap: normal;
      float: right; }
    threads ul li main {
      margin-top: 6px; }
      threads ul li main .notification {
        position: absolute;
        margin-left: 25px;
        margin-top: -4px;
        padding: 2px 4px;
        text-align: center;
        display: inline-block;
        line-height: 14px;
        background-color: red;
        border-radius: 10px;
        font-size: 12px;
        color: white; }
      threads ul li main .message {
        overflow: hidden;
        margin-left: 41px;
        min-height: 35px; }
        threads ul li main .message .co-pilot {
          margin-bottom: 6px; }
        threads ul li main .message p {
          display: inline-block;
          max-width: 100%;
          overflow: hidden;
          text-overflow: ellipsis;
          white-space: nowrap;
          word-wrap: normal; }


/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInN0eWxlcy90aHJlYWRzLnNjc3MiLCIuLi9ub2RlX21vZHVsZXMvYXBwaXJpby13b3JrLXN0eWxlcy9ub2RlX21vZHVsZXMvbm9kZS1uZWF0L25vZGVfbW9kdWxlcy9ub2RlLWJvdXJib24vbm9kZV9tb2R1bGVzL2JvdXJib24vYXBwL2Fzc2V0cy9zdHlsZXNoZWV0cy9hZGRvbnMvX2NsZWFyZml4LnNjc3MiLCIuLi9ub2RlX21vZHVsZXMvYXBwaXJpby13b3JrLXN0eWxlcy9ub2RlX21vZHVsZXMvbm9kZS1uZWF0L25vZGVfbW9kdWxlcy9ub2RlLWJvdXJib24vbm9kZV9tb2R1bGVzL2JvdXJib24vYXBwL2Fzc2V0cy9zdHlsZXNoZWV0cy9hZGRvbnMvX2VsbGlwc2lzLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBRUE7RUFDRSxBQUFTO0VBQ1QsQUFBa0I7RUFHcEIsQUFBUSxBQUFHO0lBWUwsQUFBWTtJQVhsQixBQUFRLEFBQUcsQUFBSztNQUNSLEFBQVM7TUFDVCxBQUFTO01BRWpCLEFBQVEsQUFBRyxBQUFLLEFBQUM7UUFDUCxBQUFrQjtJQ001QixBQUFRLEFBQUcsQUFBRTtNQUNULEFBQU87TUFDUCxBQUFTO01BQ1QsQUFBUztJRERiLEFBQVEsQUFBRyxBQUFFO01BQ0wsQUFBWTtJQUlwQixBQUFRLEFBQUcsQUFBRyxBQUFPO01BQ1gsQUFBUztNQUNULEFBQWdCO0lBRTFCLEFBQVEsQUFBRyxBQUFHLEFBQU87TUVQbkIsQUFBUztNQUNULEFGTzBCO01FTjFCLEFBQVU7TUFDVixBQUFlO01BQ2YsQUFBYTtNQUNiLEFBQVc7SUZNYixBQUFRLEFBQUcsQUFBRyxBQUFPO01FWG5CLEFBQVM7TUFDVCxBRlcwQjtNRVYxQixBQUFVO01BQ1YsQUFBZTtNQUNmLEFBQWE7TUFDYixBQUFXO01GUUgsQUFBTztJQUlqQixBQUFRLEFBQUcsQUFBRztNQUNOLEFBQVk7TUFHcEIsQUFBUSxBQUFHLEFBQUcsQUFBSztRQUNULEFBQVU7UUFDVixBQUFhO1FBQ2IsQUFBWTtRQUNaLEFBQVM7UUFDVCxBQUFZO1FBQ1osQUFBUztRQUNULEFBQWE7UUFDYixBQUFrQjtRQUNsQixBQUFlO1FBQ2YsQUFBVztRQUNYLEFBQU87TUFHakIsQUFBUSxBQUFHLEFBQUcsQUFBSztRQUNULEFBQWE7UUFDYixBQUFhO1FBbEJHLEFBbUJoQjtRQUVWLEFBQVEsQUFBRyxBQUFHLEFBQUssQUFBUztVQUNoQixBQUFlO1FBRzNCLEFBQVEsQUFBRyxBQUFHLEFBQUssQUFBUztVRTVDMUIsQUFBUztVQUNULEFGNEM0QjtVRTNDNUIsQUFBVTtVQUNWLEFBQWU7VUFDZixBQUFhO1VBQ2IsQUFBVyIsImZpbGUiOiJzdHlsZXMvdGhyZWFkcy5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJAaW1wb3J0IFwid29yay1pbmNsdWRlc1wiO1xuXG50aHJlYWRzIHtcbiAgZGlzcGxheTogYmxvY2s7XG4gIGJhY2tncm91bmQtY29sb3I6IHdoaXRlO1xuXG4gIHVsIHtcbiAgICBsaSB7XG4gICAgICA+IGEge1xuICAgICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgICAgcGFkZGluZzogMTBweCA2cHg7XG5cbiAgICAgICAgJjpob3ZlciB7XG4gICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogI2VlZTtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICBAaW5jbHVkZSBjbGVhcmZpeDtcblxuICAgICAgYm9yZGVyLXRvcDogMXB4IHNvbGlkICNjY2M7XG5cbiAgICAgICY6Zmlyc3QtY2hpbGQge1xuICAgICAgICBib3JkZXItdG9wOiBub25lO1xuICAgICAgfVxuXG4gICAgICBoZWFkZXIge1xuICAgICAgICAqIHtcbiAgICAgICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgICAgICAgdmVydGljYWwtYWxpZ246IG1pZGRsZTtcbiAgICAgICAgfVxuICAgICAgICBoNCB7XG4gICAgICAgICAgQGluY2x1ZGUgZWxsaXBzaXMoNzAlKTtcbiAgICAgICAgfVxuXG4gICAgICAgIHRpbWUge1xuICAgICAgICAgIEBpbmNsdWRlIGVsbGlwc2lzKDMwJSk7XG4gICAgICAgICAgZmxvYXQ6IHJpZ2h0O1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIG1haW4ge1xuICAgICAgICBtYXJnaW4tdG9wOiA2cHg7XG4gICAgICAgICRhdmF0YXItZGlhbWV0ZXI6IDM1cHg7XG5cbiAgICAgICAgLm5vdGlmaWNhdGlvbiB7XG4gICAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICAgIG1hcmdpbi1sZWZ0OiAkYXZhdGFyLWRpYW1ldGVyIC0gMTBweDtcbiAgICAgICAgICBtYXJnaW4tdG9wOiAtNHB4O1xuICAgICAgICAgIHBhZGRpbmc6IDJweCA0cHg7XG4gICAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgICAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICAgICAgICBsaW5lLWhlaWdodDogMTRweDtcbiAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZWQ7XG4gICAgICAgICAgYm9yZGVyLXJhZGl1czogMTBweDtcbiAgICAgICAgICBmb250LXNpemU6IDEycHg7XG4gICAgICAgICAgY29sb3I6IHdoaXRlO1xuICAgICAgICB9XG5cbiAgICAgICAgLm1lc3NhZ2Uge1xuICAgICAgICAgIG92ZXJmbG93ICAgOiBoaWRkZW47XG4gICAgICAgICAgbWFyZ2luLWxlZnQ6ICRhdmF0YXItZGlhbWV0ZXIgKyA2cHg7XG4gICAgICAgICAgbWluLWhlaWdodCA6ICRhdmF0YXItZGlhbWV0ZXI7XG5cbiAgICAgICAgICAuY28tcGlsb3Qge1xuICAgICAgICAgICAgbWFyZ2luLWJvdHRvbTogNnB4O1xuICAgICAgICAgIH1cblxuICAgICAgICAgIHAge1xuICAgICAgICAgICAgQGluY2x1ZGUgZWxsaXBzaXMoMTAwJSk7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICB9XG59IiwiQGNoYXJzZXQgXCJVVEYtOFwiO1xuXG4vLy8gUHJvdmlkZXMgYW4gZWFzeSB3YXkgdG8gaW5jbHVkZSBhIGNsZWFyZml4IGZvciBjb250YWluaW5nIGZsb2F0cy5cbi8vL1xuLy8vIEBsaW5rIGh0dHA6Ly9jc3Ntb2pvLmNvbS9sYXRlc3RfbmV3X2NsZWFyZml4X3NvX2Zhci9cbi8vL1xuLy8vIEBleGFtcGxlIHNjc3MgLSBVc2FnZVxuLy8vICAgLmVsZW1lbnQge1xuLy8vICAgICBAaW5jbHVkZSBjbGVhcmZpeDtcbi8vLyAgIH1cbi8vL1xuLy8vIEBleGFtcGxlIGNzcyAtIENTUyBPdXRwdXRcbi8vLyAgIC5lbGVtZW50OjphZnRlciB7XG4vLy8gICAgIGNsZWFyOiBib3RoO1xuLy8vICAgICBjb250ZW50OiBcIlwiO1xuLy8vICAgICBkaXNwbGF5OiB0YWJsZTtcbi8vLyAgIH1cblxuQG1peGluIGNsZWFyZml4IHtcbiAgJjo6YWZ0ZXIge1xuICAgIGNsZWFyOiBib3RoO1xuICAgIGNvbnRlbnQ6IFwiXCI7XG4gICAgZGlzcGxheTogdGFibGU7XG4gIH1cbn1cbiIsIkBjaGFyc2V0IFwiVVRGLThcIjtcblxuLy8vIFRydW5jYXRlcyB0ZXh0IGFuZCBhZGRzIGFuIGVsbGlwc2lzIHRvIHJlcHJlc2VudCBvdmVyZmxvdy5cbi8vL1xuLy8vIEBwYXJhbSB7TnVtYmVyfSAkd2lkdGggWzEwMCVdXG4vLy8gICBNYXgtd2lkdGggZm9yIHRoZSBzdHJpbmcgdG8gcmVzcGVjdCBiZWZvcmUgYmVpbmcgdHJ1bmNhdGVkXG4vLy9cbi8vLyBAZXhhbXBsZSBzY3NzIC0gVXNhZ2Vcbi8vLyAgIC5lbGVtZW50IHtcbi8vLyAgICAgQGluY2x1ZGUgZWxsaXBzaXM7XG4vLy8gICB9XG4vLy9cbi8vLyBAZXhhbXBsZSBjc3MgLSBDU1MgT3V0cHV0XG4vLy8gICAuZWxlbWVudCB7XG4vLy8gICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbi8vLyAgICAgbWF4LXdpZHRoOiAxMDAlO1xuLy8vICAgICBvdmVyZmxvdzogaGlkZGVuO1xuLy8vICAgICB0ZXh0LW92ZXJmbG93OiBlbGxpcHNpcztcbi8vLyAgICAgd2hpdGUtc3BhY2U6IG5vd3JhcDtcbi8vLyAgICAgd29yZC13cmFwOiBub3JtYWw7XG4vLy8gICB9XG5cbkBtaXhpbiBlbGxpcHNpcygkd2lkdGg6IDEwMCUpIHtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICBtYXgtd2lkdGg6ICR3aWR0aDtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgdGV4dC1vdmVyZmxvdzogZWxsaXBzaXM7XG4gIHdoaXRlLXNwYWNlOiBub3dyYXA7XG4gIHdvcmQtd3JhcDogbm9ybWFsO1xufVxuIl0sInNvdXJjZVJvb3QiOiIvc291cmNlLyJ9 */
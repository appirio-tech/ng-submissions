html {
  box-sizing: border-box; }

*, *::after, *::before {
  box-sizing: inherit; }

html {
  box-sizing: border-box; }

*, *::after, *::before {
  box-sizing: inherit; }

submissions {
<<<<<<< HEAD
=======
  position: relative;
>>>>>>> added logic for loader
  display: inline-block; }
  submissions > h1, submissions > h3, submissions > h4 {
    text-align: center; }
  submissions > h3 {
    text-transform: uppercase;
    color: #666; }
  submissions > h4 {
    color: #A7A9AB; }
  submissions > ul {
    margin-top: 14px; }
  submissions .submission {
    display: flex;
    align-items: center; }
    submissions .submission:first-child {
      margin-top: 0; }
    submissions .submission ul.user-details {
      justify-content: flex-start;
      display: flex;
      align-items: center;
      flex-wrap: wrap; }
      submissions .submission ul.user-details li {
        margin-right: 10px;
        margin-bottom: 10px; }
      submissions .submission ul.user-details .name-time {
        min-width: 120px;
        max-width: 120px; }
        submissions .submission ul.user-details .name-time .name {
          display: inline-block;
          max-width: 100%;
          overflow: hidden;
          text-overflow: ellipsis;
          white-space: nowrap;
          word-wrap: normal; }
        submissions .submission ul.user-details .name-time time {
          display: block; }
      submissions .submission ul.user-details .avatar {
        width: 40px;
        min-width: 40px;
        height: 40px;
        background-color: blue;
        margin-left: 14px; }
    submissions .submission ul.actions {
      margin-left: 14px;
      justify-content: space-between;
      display: flex;
      align-items: center;
      flex-wrap: wrap; }
      submissions .submission ul.actions li {
        margin-right: 10px;
        margin-bottom: 10px; }
      submissions .submission ul.actions .checkmark {
        width: 20px;
        min-width: 20px;
        height: 20px;
        background-color: green; }
      submissions .submission ul.actions .bubble {
        width: 40px;
        min-width: 40px;
        height: 40px;
        background-color: pink; }
    submissions .submission ul.thumbnails {
      justify-content: flex-start;
      display: flex;
      align-items: center;
      flex-wrap: wrap; }
      submissions .submission ul.thumbnails .thumbnail {
        margin-right: 10px;
        margin-bottom: 10px; }
        submissions .submission ul.thumbnails .thumbnail .img {
          width: 50px;
          height: 40px;
          background-color: purple; }


<<<<<<< HEAD
/*# sourceMappingURL=data:application/json;base64, */
=======
/*# sourceMappingURL=data:application/json;base64, */
>>>>>>> added logic for loader
html {
  box-sizing: border-box; }

*, *::after, *::before {
  box-sizing: inherit; }

submission-detail ul.actions {
  border: 2px solid #e6e6e6;
  border-left: none;
  border-right: none;
  margin-top: 18px;
  justify-content: space-between;
  display: flex;
  align-items: center;
  flex-wrap: wrap; }
  submission-detail ul.actions li {
    justify-content: flex-start;
    display: flex;
    align-items: center;
    flex-wrap: wrap;
    margin: 14px; }
    submission-detail ul.actions li p, submission-detail ul.actions li .name-time {
      margin-left: 14px;
      max-width: 200px; }
  submission-detail ul.actions .submitter .avatar {
    min-width: 40px;
    height: 40px;
    background-color: blue; }
  submission-detail ul.actions .submitter .name {
    display: inline-block;
    max-width: 100%;
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
    word-wrap: normal; }
  submission-detail ul.actions .submitter time {
    display: block; }
  submission-detail ul.actions .accept .checkmark {
    min-width: 20px;
    height: 20px;
    background-color: green; }
  submission-detail ul.actions .comment .bubble {
    min-width: 20px;
    height: 20px;
    background-color: green; }
submission-detail .previews {
  margin-top: 14px;
  justify-content: flex-start;
  display: flex;
  align-items: center;
  flex-wrap: wrap; }
  submission-detail .previews .preview {
    margin-right: 14px;
    margin-bottom: 14px;
    width: 160px;
    position: relative; }
    submission-detail .previews .preview .img {
      width: 160px;
      height: 130px;
      background-color: orange; }
    submission-detail .previews .preview .checkmark {
      position: absolute;
      min-width: 20px;
      height: 20px;
      background-color: teal;
      top: 14px;
      right: 14px; }
    submission-detail .previews .preview p {
      padding: 6px;
      display: inline-block;
      max-width: 100%;
      overflow: hidden;
      text-overflow: ellipsis;
      white-space: nowrap;
      word-wrap: normal; }


<<<<<<< HEAD
/*# sourceMappingURL=data:application/json;base64, */
=======
/*# sourceMappingURL=data:application/json;base64, */
>>>>>>> added logic for loader
html {
  box-sizing: border-box; }

*, *::after, *::before {
  box-sizing: inherit; }

submission-slides ul.header {
  justify-content: space-between;
  display: flex;
  align-items: center;
  flex-wrap: wrap; }
  submission-slides ul.header li {
    display: flex;
    align-items: center; }
  submission-slides ul.header .avatar {
    width: 40px;
    height: 40px;
    background-color: grey; }
  submission-slides ul.header .name-time {
    margin-left: 14px; }
  submission-slides ul.header .checkmark {
    height: 30px;
    width: 30px;
    background-color: green; }
  submission-slides ul.header .bubble {
    height: 30px;
    width: 30px;
    margin-left: 14px;
    background-color: orange; }
submission-slides ul.slideshow {
  justify-content: space-between;
  display: flex;
  align-items: center;
  flex-wrap: wrap; }
  submission-slides ul.slideshow .left-arrow {
    width: 50px;
    height: 80px;
    background-color: purple; }
  submission-slides ul.slideshow .right-arrow {
    width: 50px;
    height: 80px;
    background-color: purple; }
  submission-slides ul.slideshow .preview {
    max-width: 200px; }
    submission-slides ul.slideshow .preview p {
      text-align: center;
      margin-top: 18px;
      display: inline-block;
      max-width: 100%;
      overflow: hidden;
      text-overflow: ellipsis;
      white-space: nowrap;
      word-wrap: normal; }
    submission-slides ul.slideshow .preview .img {
      width: 200px;
      height: 400px;
      background-color: blue; }
submission-slides ul.thumbnails {
  margin: 0 auto;
  margin-top: 18px;
  max-width: 360px;
  justify-content: space-between;
  display: flex;
  align-items: center;
  flex-wrap: wrap; }
<<<<<<< HEAD
  submission-slides ul.thumbnails li button {
    background-color: Transparent;
    background-repeat: no-repeat;
    border: none;
    cursor: pointer;
    overflow: hidden;
    outline: none; }
=======
>>>>>>> added logic for loader
  submission-slides ul.thumbnails li .img {
    width: 30px;
    height: 30px;
    background-color: pink; }


<<<<<<< HEAD
/*# sourceMappingURL=data:application/json;base64, */
=======
/*# sourceMappingURL=data:application/json;base64, */
>>>>>>> added logic for loader

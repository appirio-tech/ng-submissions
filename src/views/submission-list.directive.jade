p.total-count {{ vm.submissions.length }} submissions

hr.total-count

ul.submissions.new(ng-if='vm.statusValue > 3')
  li.submission(ng-repeat='submission in vm.submissions', data-id='{{ submission.id }}', ng-class="{ 'belongs-to-user': submission.belongsToUser }")
    ul.user-details.flex.middle.space-between
      li.flex.middle
        .rank-number.flex.middle.space-between(ng-class="{expanded: submission.rank}" ng-if="!vm.customerConfirmedRanks")
          .rank.flex.center.middle(ng-if="submission.rank")
            label {{submission.rank | ordinalNumber}} Place

          label.submission-number # {{vm.submissionIdMap[submission.id]}}

          p.secondary {{ submission.files.length }} Images

        .handle-avatar.flex.middle.space-between(ng-if="vm.customerConfirmedRanks")
          a(href="{{vm.generateProfileUrl(submission.submitter.handle)}}" target="_blank")
            avatar(avatar-url='{{ submission.submitter.avatar }}')

          .name-time
            a(href="{{vm.generateProfileUrl(submission.submitter.handle)}}" target="_blank")
              .name {{ submission.submitter.handle }} 
                span(ng-if='submission.belongsToUser') (Me)

          p.secondary {{ submission.files.length }} Images

      li
        ul.flex.middle.actions
          li(ng-class="{invisible: !submission.downloadUrl}")
            a(href='{{ submission.downloadUrl }}', target='_blank')
              .icon.download.small

          li
            rank-dropdown(project-id='{{ vm.projectId }}', step-id='{{ vm.stepId }}', submission-id='{{ submission.id }}', user-type='{{ vm.userType }}' permissions="vm.permissions")

    file-row(files='submission.files', view-all-url='{{ submission.detailUrl }}', limit='5')



//- p.total-count {{ vm.submissions.length }} submissions

//- hr.total-count

//- ul.submissions.new(ng-if='vm.statusValue > 3')
//-   li.submission(ng-repeat='submission in vm.submissions', data-id='{{ submission.id }}', ng-class="{ 'belongs-to-user': submission.belongsToUser }", draggable)
//-     ul.user-details.flex.middle.space-between
//-       li.flex.middle
//-         a(href="{{vm.generateProfileUrl(submission.submitter.handle)}}" target="_blank")
//-           avatar(avatar-url='{{ submission.submitter.avatar }}')

//-         .name-time
//-           a(href="{{vm.generateProfileUrl(submission.submitter.handle)}}" target="_blank")
//-             .name {{ submission.submitter.handle }} 
//-               span(ng-if='submission.belongsToUser') (Me)

//-           p.secondary {{ submission.files.length }} Images

//-       li
//-         ul.flex.middle.actions
//-           li(ng-class="{invisible: !submission.downloadUrl}")
//-             a(href='{{ submission.downloadUrl }}', target='_blank')
//-               .icon.download.small

//-           li
//-             rank-dropdown(project-id='{{ vm.projectId }}', step-id='{{ vm.stepId }}', submission-id='{{ submission.id }}', user-type='{{ vm.userType }}')

//-     file-row(files='submission.files', view-all-url='{{ submission.detailUrl }}', limit='5')